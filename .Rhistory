test %$%
purrr::map2(f_name, lead_time, raster_to_tibble)
states <- urbnmapr::get_urbn_map(sf = TRUE) %>%
dplyr::filter(state_abbv != 'AK', state_abbv != 'HI') %>%
sf::st_transform(6933)
test %$%
purrr::map2(f_name, lead_time, raster_to_tibble) -> df
df
test %$%
purrr::map2(f_name, lead_time, raster_to_tibble) %>%
dplyr::bind_rows() -> dat
dat
x = test
x
day <- unique(x$date)
day
dat
caption <- paste('Prediction for', day, 'USDM Drought')
CAPTION
caption
dat <- f_list %>%
grep(pattern, ., value = T) %>%
lapply(map_to_tidy, template = template) %>%
dplyr::bind_rows() %>%
dplyr::mutate(type = ifelse(type == 'pred',
'Modeled Drought',
'USDM Drought'))
dat
dat %>%
ggplot() +
geom_raster(data = dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5)
dat
ggplot() +
geom_raster(data = dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5)
dat <- dat %>%
dplyr::mutate(
lead_time = as.character(lead_time),
lead_time = ifelse(lead_time == '-1',
'USDM Drought',
paste(lead_time, 'Week Lead Time')
)
)
dat
unique(dat$lead_time)
fig <- ggplot() +
geom_raster(data = dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5) +
# theme(aspect.ratio = 264/610) +
labs(x='', y='', fill='Drought\nCategory', title = pattern) +
facet_wrap(~lead_time) +
labs(title=caption) +
plot_theme()
dat <- dat %>%
dplyr::mutate(
lead_time = as.character(lead_time),
lead_time = ifelse(lead_time == '-1',
'USDM Drought',
paste(lead_time, 'Week Lead Time')
),
val = val * 5
)
dat
fig <- ggplot() +
geom_raster(data = dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5) +
# theme(aspect.ratio = 264/610) +
labs(x='', y='', fill='Drought\nCategory') +
facet_wrap(~lead_time) +
labs(title=caption) +
plot_theme()
library(ggplot2)
library(magrittr)
source('https://raw.githubusercontent.com/colinbrust/DroughtCast/revert/crdm/R/PlotTheme.R')
fig <- ggplot() +
geom_raster(data = dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5) +
# theme(aspect.ratio = 264/610) +
labs(x='', y='', fill='Drought\nCategory') +
facet_wrap(~lead_time) +
labs(title=caption) +
plot_theme()
fig
x
dat
x %$%
purrr::map2(f_name, lead_time, raster_to_tibble) %>%
dplyr::bind_rows() -> dat
out_dat <- dat %>%
dplyr::mutate(
val = ifelse(lead_time == -1, val, val * 5),
lead_time = as.character(lead_time),
lead_time = ifelse(lead_time == '-1',
'USDM Drought',
paste(lead_time, 'Week Lead Time')
)
)
out_dat
out_dat %$% hist(val)
round(0.48)
round(0.5)
round(0.51)
out_dat <- dat %>%
dplyr::mutate(
val = ifelse(lead_time == -1, val, val * 5),
val = round(val),
lead_time = as.character(lead_time),
lead_time = ifelse(lead_time == '-1',
'USDM Drought',
paste(lead_time, 'Week Lead Time')
)
)
hist(out_dat$val)
out_dat <- dat %>%
dplyr::mutate(
val = ifelse(lead_time == -1, val, val * 5),
val = round(val),
lead_time = as.character(lead_time),
lead_time = ifelse(lead_time == '-1',
'USDM Drought',
paste(lead_time, 'Week Lead Time')
),
val = dplyr::recode(
val,
`0` = 'No Drought',
`1` = 'D0',
`2` = 'D1',
`3` = 'D2',
`4` = 'D3',
`5` = 'D4'),
val = ifelse(val == 'NA', NA, val)
)
fig <- ggplot() +
geom_raster(data = dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5) +
# theme(aspect.ratio = 264/610) +
labs(x='', y='', fill='Drought\nCategory') +
scale_fill_manual(values = c('No Drought' = NA,
'D0' = '#FFFF00',
'D1' = '#FCD37F',
'D2' = '#FFAA00',
'D3' = '#E60000',
'D4' = '#730000')) +
facet_wrap(~lead_time) +
labs(title=caption) +
plot_theme()
fig
fig
fig <- ggplot() +
geom_raster(data = out_dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5) +
# theme(aspect.ratio = 264/610) +
labs(x='', y='', fill='Drought\nCategory') +
scale_fill_manual(values = c('No Drought' = NA,
'D0' = '#FFFF00',
'D1' = '#FCD37F',
'D2' = '#FFAA00',
'D3' = '#E60000',
'D4' = '#730000')) +
facet_wrap(~lead_time) +
labs(title=caption) +
plot_theme()
fig
fig <- ggplot() +
geom_raster(data = out_dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5) +
# theme(aspect.ratio = 264/610) +
labs(x='', y='', fill='Drought\nCategory') +
scale_fill_manual(values = c('No Drought' = NA,
'D0' = '#FFFF00',
'D1' = '#FCD37F',
'D2' = '#FFAA00',
'D3' = '#E60000',
'D4' = '#730000')) +
facet_wrap(~lead_time, nrow = 2) +
labs(title=caption) +
plot_theme()
fig
fig <- ggplot() +
geom_raster(data = out_dat, mapping = aes(x=x, y=y, fill = val)) +
geom_sf(data = states, mapping = aes(), fill = NA, size=0.5) +
# theme(aspect.ratio = 264/610) +
labs(x='', y='', fill='Drought\nCategory') +
scale_fill_manual(values = c('No Drought' = NA,
'D0' = '#FFFF00',
'D1' = '#FCD37F',
'D2' = '#FFAA00',
'D3' = '#E60000',
'D4' = '#730000')) +
facet_wrap(~lead_time, nrow = 3) +
labs(title=caption) +
plot_theme()
fig
library(reticulate)
library(magrittr)
library(ggplot2)
use_condaenv("gee", conda = "/opt/miniconda3/bin/conda")
source_python('~/projects/DroughtCast/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/DroughtCast/revert/crdm/R/PlotTheme.R')
strip_text = function(x) {
x %>%
stringr::str_split('-') %>%
lapply(magrittr::extract, -1) %>%
as.numeric()
}
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('modelType', 'epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rerun', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rerun'),
strip_text
)
}
f_dir='~/projects/DroughtCast/data/model_results/'
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks))
warnings()
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('modelType', 'epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rr', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rr'),
strip_text
)
}
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks))
f_dir %>%
list.files(full.names = T, pattern = 'err.p')
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>% magrittr::extract(1) -> f
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f))
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rerun', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rerun'),
strip_text
)
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rerun', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rerun'),
strip_text
)
}
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks))
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rerun', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rerun'),
strip_text
) %>%
dplyr::mutate(rowid = rowid + (epochs * rerun))
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(epochs != 20) %>%
ggplot(aes(x=rowid, y=value, color=set)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(epochs != 20)
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(epochs != 20) %>%
ggplot(aes(x=rowid, y=value, color=set)) +
geom_line() +
facet_wrap(~leadTime) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rerun', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rerun'),
strip_text
) %>%
dplyr::mutate(rowid = rowid + (epochs * rerun))
}
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(epochs != 20) %>%
ggplot(aes(x=rowid, y=value, color=set)) +
geom_line() +
facet_wrap(~leadTime) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
list.files('./data/in_features/weekly_mem', full.names = T, pattern = 'VOD')
list.files('./data/in_features/weekly_mem', full.names = T, pattern = 'VOD') %>% stringr::str_replace('_VOD.dat', '_vod.dat')
old_names = list.files('./data/in_features/weekly_mem', full.names = T, pattern = 'VOD')
new_names = stringr::str_replace(old_names, '_VOD.dat', '_vod.dat')
old_names
new_names
old_names
file.rename(old_names, new_names)
library(reticulate)
library(magrittr)
library(ggplot2)
use_condaenv("gee", conda = "/opt/miniconda3/bin/conda")
source_python('~/projects/DroughtCast/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/DroughtCast/revert/crdm/R/PlotTheme.R')
strip_text = function(x) {
x %>%
stringr::str_split('-') %>%
lapply(magrittr::extract, -1) %>%
as.numeric()
}
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rerun', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rerun'),
strip_text
) %>%
dplyr::mutate(rowid = rowid + (epochs * rerun))
}
plot_all <- function(f_dir='~/projects/DroughtCast/data/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(epochs != 20) %>%
ggplot(aes(x=rowid, y=value, color=set)) +
geom_line() +
facet_wrap(~leadTime) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
list.files('./data/in_features/weekly_mem', full.names = T, pattern = 'VOD')
library(reticulate)
library(magrittr)
library(ggplot2)
use_condaenv("gee", conda = "/opt/miniconda3/bin/conda")
source_python('~/projects/DroughtCast/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/DroughtCast/revert/crdm/R/PlotTheme.R')
strip_text = function(x) {
x %>%
stringr::str_split('-') %>%
lapply(magrittr::extract, -1) %>%
as.numeric()
}
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'init', 'rerun', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime', 'rerun'),
strip_text
) %>%
dplyr::mutate(rowid = rowid + (epochs * rerun))
}
plot_all <- function(f_dir='~/projects/DroughtCast/data/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(epochs != 20) %>%
ggplot(aes(x=rowid, y=value, color=set)) +
geom_line() +
facet_wrap(~leadTime) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
list.files('./data/in_features/weekly_mem', full.names = T, pattern = 'VOD')
plot_all()
