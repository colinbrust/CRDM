raster::plot(m)
?raster::mean
>?raster::mean
??raster::mean
?raster::mean()
??raster::mean()
anom <- stk - m
anom
raster::plot(anom[[1]])
norm <- raster::calc(anom, norm_calc)
raster::plot(norm[[1]])
raster::plot(norm[[5]])
raster::plot(norm[[8]])
arr <- norm %>% raster::getValues()
arr[10000,] %>% tibble::tibble(y = .) %>% tibble::rowid_to_column() %>% ggplot(aes(x=rowid, y=y)) + geom_line()
s <- raster::calc(stk, sd, na.rm = T)
zs = anom / s
zs
raster::plot(zs[[1]])
stk
norm <- raster::calc(zs, norm_calc)
warnings()
arr <- norm %>% raster::getValues()
arr[10000,] %>% tibble::tibble(y = .) %>% tibble::rowid_to_column() %>% ggplot(aes(x=rowid, y=y)) + geom_line()
arr <- zs %>% raster::getValues()
arr[10000,] %>% tibble::tibble(y = .) %>% tibble::rowid_to_column() %>% ggplot(aes(x=rowid, y=y)) + geom_line()
stk <- list.files(in_dir, pattern = variable, full.names = T) %>%
head(12) %>%
raster::stack()
m <- raster::mean(stk)
anom <- stk - m
s <- raster::calc(stk, sd, na.rm = T)
zs = anom / s
arr <- zs %>% raster::getValues()
hist(arr)
stk
norm_calc(rep(-9999, 100))
stk <- list.files(in_dir, pattern = variable, full.names = T) %>%
raster::stack() %>%
raster::calc(norm_calc)
stk <- list.files(in_dir, pattern = variable, full.names = T) %>%
head(20) %>%
raster::stack() %>%
raster::calc(norm_calc)
stk
raster::plot(stk[[1]])
stk[[1]] %>% raster::plot()
stk[[1]] %>% raster::getValues()
stk[[8]] %>% raster::getValues()
stk[[8]] %>% raster::plot()
1/3000
stk
f_list %>%
raster::stack() %>%
raster::calc(norm_calc)
f_list <- list.files(in_dir, pattern = variable, full.names = T)
f_list %>%
raster::stack() %>%
raster::calc(norm_calc)
stk <-  f_list %>%
raster::stack() %>%
raster::calc(norm_calc)
stk <-  f_list %>%
raster::stack() %>%
raster::calc(norm_calc)
stk <-  f_list %>%
head(20) %>%
raster::stack() %>%
raster::calc(norm_calc)
stk
list(stk)
raster::as.list(stk)
f_list
basename(f_list)
out_dir = '~/Desktop/misc_data/tmp'
out_names <- file.path(out_dir, basename(f_list))
out_names
stk <-  f_list %>%
# head(20) %>%
raster::stack() %>%
raster::calc(norm_calc) %>%
raster::as.list()
stk <-  f_list %>%
head(20) %>%
raster::stack() %>%
raster::calc(norm_calc) %>%
raster::as.list()
?writeRaster()
mapply(writeRaster, x=stk, filename=out_names)
mapply(raster::writeRaster, x=stk, filename=out_names)
f_list <- list.files(in_dir, pattern = variable, full.names = T) %>% head(20)
stk <-  f_list %>%
raster::stack() %>%
raster::calc(norm_calc) %>%
raster::as.list()
out_names <- file.path(out_dir, basename(f_list))
mapply(raster::writeRaster, x=stk, filename=out_names)
raster::raster('/home/colin/Desktop/misc_data/tmp/20030501_ET.tif')
variables = c('fw', 'pr', 'rmax', 'rmin', 'sm-surface', 'sm-rootzone',
'srad', 'tmmn', 'tmmx', 'VOD', 'vpd', 'vs') %>% paste0('.tif')
variables
usdm_to_raster <- function(basemap, f_dir = "/mnt/e/Data/USDM/shapefiles",
out_dir='/mnt/e/PycharmProjects/CRDM/data/out_classes') {
basemap <- raster::raster(basemap)
f_dir %>%
list.files(full.names = T, pattern = '.shp') %>%
grep('.xml', ., value = T, invert = T) %>%
lapply(dm_to_raster, template=basemap, out_dir=out_dir)
}
raster::raster('~/Desktop/misc_data/out_classes/out_tif/20000104_USDM.tif')
source('/mnt/e/PycharmProjects/CRDM/crdm/fetch/FetchUSDM.R', echo=TRUE)
source('/mnt/e/PycharmProjects/CRDM/crdm/fetch/FetchUSDM.R', echo=TRUE)
284*622
264*610
'/home/colin/Desktop/misc_data/out_classes/out_tif/20150505_USDM.tif' %>% raster::raster() %>% raster::plot()
'/home/colin/Desktop/misc_data/out_classes/out_tif/20150505_USDM.tif' %>% raster::raster() %>% raster::getValues() %>% hist()
list.files('/mnt/e/PycharmProjects/CRDM/data/in_features/weekly', full.names = T, pattern = 'sm-surface')
list.files('/mnt/e/PycharmProjects/CRDM/data/in_features/weekly', full.names = T, pattern = 'sm-surface') -> fs
fs
fs
possible_dates <- seq(as.Date('2000-01-04'), as.Date(Sys.time()), by='1 week')
fs
fs %>%
tibble::tibble(fname = .)
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(n = basename(fname))
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 9))
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8))
possible_dates <- seq(as.Date('2000-01-04'),
as.Date(Sys.time()), by='1 week') %>%
tibble::tibble(date = .)
possible_dates
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date())
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date()) %>%
dplyr::full_join(possible_dates)
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date()) %>%
dplyr::full_join(possible_dates) %>% tail()
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date())
possible_dates
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date(),
date = date + 1) %>%
dplyr::full_join(possible_dates) %>%
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date(),
date = date + 1) %>%
dplyr::full_join(possible_dates)
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date(),
date = date + 1) %>%
dplyr::full_join(possible_dates) %>% dplyr::filter(is.na(date))
fs %>%
tibble::tibble(fname = .) %>%
dplyr::mutate(base = basename(fname),
date = stringr::str_sub(base, 1, 8) %>% lubridate::as_date(),
date = date + 1) %>%
dplyr::full_join(possible_dates) %>% View()
library(reticulate)
library(magrittr)
library(ggplot2)
use_condaenv("gee", conda = "/opt/miniconda3/bin/conda")
source_python('~/projects/CRDM/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/CRDM/develop/crdm/R/PlotTheme.R')
use_condaenv("crdm", conda = "/home/colin/miniconda3/bin/conda")
source_python('~/projects/CRDM/crdm/utils/ReadPickle.py')
source_python('/mnt/e/PycharmProjects/CRDM/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/CRDM/develop/crdm/R/PlotTheme.R')
strip_text = function(x) {
x %>%
stringr::str_split('-') %>%
lapply(magrittr::extract, -1) %>%
as.numeric()
}
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('modelType', 'epochs', 'batch', 'nMonths', 'hiddenSize',
'leadTime', 'rmFeatures', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nMonths', 'hiddenSize', 'leadTime'),
strip_text
)
}
plot_all <- function(f_dir='~/projects/CRDM/data/drought/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nMonths = factor(nMonths)) %>%
dplyr::filter(set == 'train') %>%
ggplot(aes(x=rowid, y=value, color=batch)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
plot_all('/mnt/e/PycharmProjects/CRDM/data/model_results')
f_dir = '/mnt/e/PycharmProjects/CRDM/data/model_results'
f_dir
f_dir %>%
list.files(full.names = T, pattern = 'err.p')
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file)
install.packages('reticulate')
install.packages("reticulate")
candidates <- c( Sys.getenv("R_PROFILE"),
file.path(Sys.getenv("R_HOME"), "etc", "Rprofile.site"),
Sys.getenv("R_PROFILE_USER"),
file.path(getwd(), ".Rprofile") )
Filter(file.exists, candidates)
install.packages('reticulate')
install.packages("reticulate")
'a' %>% print()
install.packages('reticulate')
library(reticulate)
library(magrittr)
library(ggplot2)
use_condaenv("crdm", conda = "/home/colin/miniconda3/bin/conda")
source_python('/mnt/e/PycharmProjects/CRDM/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/CRDM/develop/crdm/R/PlotTheme.R')
strip_text = function(x) {
x %>%
stringr::str_split('-') %>%
lapply(magrittr::extract, -1) %>%
as.numeric()
}
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('modelType', 'epochs', 'batch', 'nMonths', 'hiddenSize',
'leadTime', 'rmFeatures', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nMonths', 'hiddenSize', 'leadTime'),
strip_text
)
}
plot_all <- function(f_dir='~/projects/CRDM/data/drought/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nMonths = factor(nMonths)) %>%
dplyr::filter(set == 'train') %>%
ggplot(aes(x=rowid, y=value, color=batch)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
plot_all('/mnt/e/PycharmProjects/CRDM/data/model_results/modelType-LSTM_epochs-30_batch-512_nMonths-16_hiddenSize-512_leadTime-4_rmFeatures-False_fType-err.p')
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file)
f_dir = '/mnt/e/PycharmProjects/CRDM/data/model_results/modelType-LSTM_epochs-30_batch-512_nMonths-16_hiddenSize-512_leadTime-4_rmFeatures-False_fType-err.p'
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file)
read_file(f_dir)
f_dir %>%
list.files(full.names = T, pattern = 'err.p')
f_dir
plot_all('/mnt/e/PycharmProjects/CRDM/data/model_results')
raster::raster)
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/constant/elevation.tif')
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/constant/lat.tif')
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/constant/lon.tif')
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/constant/lon.tif') %>% raster::getValues()
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/constant/lon.tif') %>% raster::getValues() %>% is.na()
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/constant/lon.tif') %>% raster::getValues() %>% is.na() %>% sum()
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/week_norm/20000110_sm-rootzone.tif') %>% raster::getValues() %>% is.na() %>% sum()
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/week_norm/20000110_sm-rootzone.tif') %>% raster::getValues()
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/week_norm/20000110_sm-rootzone.tif') %>% raster::getValues() %>% is.na()
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/week_norm/20000110_sm-rootzone.tif') %>% raster::getValues() %>% View()
raster::raster('/mnt/e/PycharmProjects/CRDM/data/in_features/week_norm/20000110_sm-rootzone.tif') %>% raster::plot()
source('/mnt/e/PycharmProjects/CRDM/crdm/R/PlotError.R', echo=TRUE)
plot_all('~/Desktop/misc_data/modelType-LSTM_epochs-20_batch-512_nMonths-16_hiddenSize-512_leadTime-4_rmFeatures-False_fType-err.p')
plot_all('~/Desktop/misc_data')
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(set == 'train') %>%
ggplot(aes(x=rowid, y=value, color=batch)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
plot_all <- function(f_dir='~/projects/CRDM/data/drought/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(set == 'train') %>%
ggplot(aes(x=rowid, y=value, color=batch)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
plot_all('~/Desktop/misc_data')
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('modelType', 'epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime'),
strip_text
)
}
plot_all <- function(f_dir='~/projects/CRDM/data/drought/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
dplyr::filter(set == 'train') %>%
ggplot(aes(x=rowid, y=value, color=batch)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
plot_all('~/Desktop/misc_data')
plot_all <- function(f_dir='~/projects/CRDM/data/drought/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
ggplot(aes(x=rowid, y=value, color=set)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
plot_all('~/Desktop/misc_data')
plot_all('~/Desktop/misc_data')
library(reticulate)
library(magrittr)
library(ggplot2)
use_condaenv("crdm", conda = "/home/colin/miniconda3/bin/conda")
source_python('/mnt/e/PycharmProjects/CRDM/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/CRDM/develop/crdm/R/PlotTheme.R')
strip_text = function(x) {
x %>%
stringr::str_split('-') %>%
lapply(magrittr::extract, -1) %>%
as.numeric()
}
read_file <- function(f) {
read_pickle(f) %>%
lapply(function(x) lapply(x,mean)) %>%
lapply(tibble::as_tibble) %>%
dplyr::bind_rows() %>%
tibble::rowid_to_column() %>%
dplyr::mutate(f = basename(f)) %>%
tidyr::separate(
f,
c('modelType', 'epochs', 'batch', 'nWeeks', 'hiddenSize',
'leadTime', 'rmFeatures', 'fType'),
sep='_'
) %>%
dplyr::select(-dplyr::starts_with('drop')) %>%
dplyr::mutate_at(
c('epochs', 'batch', 'nWeeks', 'hiddenSize', 'leadTime'),
strip_text
)
}
plot_all <- function(f_dir='~/projects/CRDM/data/drought/model_results/') {
f_dir %>%
list.files(full.names = T, pattern = 'err.p') %>%
lapply(read_file) %>%
dplyr::bind_rows() %>%
tidyr::pivot_longer(c(train, test), names_to='set') %>%
dplyr::mutate(batch = factor(batch),
hiddenSize = factor(hiddenSize),
nWeeks = factor(nWeeks)) %>%
ggplot(aes(x=rowid, y=value, color=set)) +
geom_line() +
facet_wrap(~hiddenSize) +
labs(x='Epoch', y='Cross-Entropy Loss', color='# Month\nHistory') +
plot_theme()
}
plot_all('~/Desktop/misc_data')
list.files('/mnt/e/PycharmProjects/CRDM/data/in_features/weekly_mem')
list.files('/mnt/e/PycharmProjects/CRDM/data/in_features/weekly_mem') %>% unique()
library(magrittr)
list.files('/mnt/e/PycharmProjects/CRDM/data/in_features/weekly_mem') %>% unique() %>% length()
list.files('/mnt/e/PycharmProjects/CRDM/data/in_features/weekly_mem') %>% length()
install.packages(c("dplyr", "ggplot2", "magrittr", "reticulate", "stringr", "tibble", "tidyr"))
library(magrittr)
'a' %>% print()
install.packages('urbnmapr')
install.packages('devtools')
install.packages('gert')
remotes::install_github("r-lib/gert")
install.packages('gert')
remotes::install_github("UrbanInstitute/urbnmapr")
install.packages('raster')
install.packages('sf')
urbnmapr::get_urbn_map(sf = T) %>% plot()
urbnmapr::get_urbn_map(sf = T) %>% sf::st_crs()
source('/mnt/e/PycharmProjects/CRDM/crdm/R/PlotMaps.R', echo=TRUE)
save_all(f_dir = '/mnt/e/PycharmProjects/CRDM/data/model_results/weekly_maps', '/mnt/e/PycharmProjects/CRDM/figures/maps', '/mnt/e/PycharmProjects/CRDM/data/template.tif')
install.packages('rgdal')
save_all(f_dir = '/mnt/e/PycharmProjects/CRDM/data/model_results/weekly_maps', '/mnt/e/PycharmProjects/CRDM/figures/maps', '/mnt/e/PycharmProjects/CRDM/data/template.tif')
install.packages('lubridate')
save_all(f_dir = '/mnt/e/PycharmProjects/CRDM/data/model_results/weekly_maps', '/mnt/e/PycharmProjects/CRDM/figures/maps', '/mnt/e/PycharmProjects/CRDM/data/template.tif')
source('/mnt/e/PycharmProjects/CRDM/crdm/R/PlotMaps.R', echo=TRUE)
save_all(f_dir = '/mnt/e/PycharmProjects/CRDM/data/model_results/weekly_maps', '/mnt/e/PycharmProjects/CRDM/figures/maps', '/mnt/e/PycharmProjects/CRDM/data/template.tif')
library(reticulate)
library(magrittr)
library(ggplot2)
use_condaenv("crdm", conda = "/home/colin/miniconda3/bin/conda")
source_python('/mnt/e/PycharmProjects/CRDM/crdm/utils/ReadPickle.py')
source('https://raw.githubusercontent.com/colinbrust/CRDM/develop/crdm/R/PlotTheme.R')
source('/mnt/e/PycharmProjects/CRDM/crdm/R/PlotError.R', echo=TRUE)
plot_all('/mnt/e/PycharmProjects/CRDM/data/model_results/weekly_results')
source('/mnt/e/PycharmProjects/CRDM/crdm/R/PlotMaps.R', echo=TRUE)
setwd('/mnt/e/PycharmProjects/CRDM/')
save_all('data/model_results/weekly_maps', './figures/maps/init', './data/template.tif')
save_all <- function(f_dir='~/projects/CRDM/data/drought/model_results/weekly_maps/',
out_dir='~/projects/CRDM/figures/opt_weekly/',
template='~/projects/CRDM/data/drought/template.tif') {
f_list <- list.files(f_dir, full.names = T, pattern = '.csv')
template <- raster::raster(template)
states <- urbnmapr::get_urbn_map(sf = TRUE) %>%
dplyr::filter(state_abbv != 'AK', state_abbv != 'HI') %>%
sf::st_transform(6933)
patterns <- f_list %>%
basename() %>%
stringr::str_replace('_pred.csv', '') %>%
stringr::str_replace('_real.csv', '') %>%
unique()
parallel::mclapply(patterns, plot_single_date, f_list = f_list, out_dir = out_dir,
template = template, states = states, mc.cores=10)
}
save_all('data/model_results/weekly_maps', './figures/maps/init', './data/template.tif')
